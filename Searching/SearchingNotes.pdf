/******************************************************************************

                              Online C++ Compiler.
              Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>
using namespace std;

//linear search
int linearSearch(int arr[], int n, int x){
    for(int i=0; i<n; i++){
        if(arr[i] == x)
            return i;
    }
    return -1;
}

//recursive method - BINARY SEARCH
int binarySearch(int arr[], int l, int r, int x){
    if(l <= r){
        int mid = l + (r-l) /2;
        
        if(mid == x) return x;
        
        if(arr[mid] < x)
            return binarySearch(arr, mid+1, r, x);
        
        if(arr[mid] > x)
            return binarySearch(arr, l, mid-1, x);
    }
    return -1;
}

//iterative method - BINARY SEARCH
int binarySearch(int arr[], int l, int r, int x){
    if(l <= r){
        int mid = l + (r-l) /2;
        
        if(mid == x) return x;
        
        if(arr[mid] < x)
            l = mid+1;
        
        if(arr[mid] > x)
            r = mid-1;
    }
    return -1;
}

//recursive method - TERNARY SEARCH
int ternarySearch(int arr, int l, int r, int x){
    if(l <=r){
        int mid1 = l + (r-l) / 3;
        int mid2 = r - (r-l) / 3;
        
        if(mid1 == x) return mid1;
        
        if(mid2 == x) return mid2;
        
        if(x < arr[mid1])
            return ternarySearch(arr, l, mid1-1, x);
        else if(x > arr[mid2])
            return ternarySearch(arr, mid2+1, r, x);
        else
            return ternarySearch(arr, mid1+1, mid2-1, x);
    }
    return -1;
}

//iterative method - TERNARY SEARCH
int ternarySearch(int arr, int l, int r, int x){
    if(l <=r){
        int mid1 = l + (r-l) / 3;
        int mid2 = r - (r-l) / 3;
        
        if(mid1 == x) return mid1;
        
        if(mid2 == x) return mid2;
        
        if(x < arr[mid1])
            r = mid1 - 1;
        else if(x > arr[mid2])
            l = mid2 + 1;
        else
            l = mid1 + 1;
            r = mid2 - 1;
    }
    return -1;
}



//binary search functions in c++ STL - ON VECTORS
#include<bits/stdc++.h> 
using namespace std; 
int main(){
    vector<int> vec = {10,20,30,40,50};
    if(binary_search(vec.begin(), vec.end(), 15)){
        cout << "yes";
    }else{
        cout << "no";
    }
    cout << endl;
}

//binary search functions in c++ STL - ON ARRAYS
#include<bits/stdc++.h> 
using namespace std; 
int main(){
    int arr[] = {10,20,30,40,50};
    int n = sizeof(arr)/sizeof(arr[0]);
    if(binary_search(arr, arr+n, 40)){
        cout << "Present in array";
    }else{
        cout << "Not present in Array";
    }
    cout << endl;
}